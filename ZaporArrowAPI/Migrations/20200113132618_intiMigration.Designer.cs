// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ZaporArrowAPI.DbContexts;

namespace ZaporArrowAPI.Migrations
{
    [DbContext(typeof(ZaporArrowContext))]
    [Migration("20200113132618_intiMigration")]
    partial class intiMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ZaporArrowAPI.Entities.Arrow", b =>
                {
                    b.Property<Guid>("ArrowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<double>("Length")
                        .HasColumnType("float");

                    b.HasKey("ArrowId");

                    b.ToTable("Arrows");
                });

            modelBuilder.Entity("ZaporArrowAPI.Entities.Image", b =>
                {
                    b.Property<Guid>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ArrowId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageSource")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ImageId");

                    b.HasIndex("ArrowId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("ZaporArrowAPI.Entities.Image", b =>
                {
                    b.HasOne("ZaporArrowAPI.Entities.Arrow", null)
                        .WithMany("Images")
                        .HasForeignKey("ArrowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
